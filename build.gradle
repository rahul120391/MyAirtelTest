// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    buildToolVersion = "29.0.2"
    compileSdkVersion = 29
    minSdkVersion = 21
    targetSdkVersion = 29
    versionCode = 1
    versionName = "1.0"
    appCompatVersion = '1.1.0'
    recyclerViewVersion = '1.1.0'
    supportVersion = '1.0.0'
    constraintLayoutVersion = '1.1.3'
    constraintLayoutVersion = '1.1.3'
    rxKotlinVersion = '2.2.0'
    rxAndroidVersion = '2.1.1'
    daggerVersion = '2.25.2'
    gSonVersion = '2.8.6'
    gSonConvertorRetrofitVersion = '2.8.2'
    okHttpVersion = '4.4.0'
    roomDatabaseVersion = '2.2.5'
    junitVers = '4.12'
    coreTestingVersion = '1.1.1'
    mockitoVersion = '2.23.0'
    powerMockVersion = '2.0.0-RC.4'
    lifecycleVersion = '1.1.1'
    coreTestingVersion = '1.1.1'
    roboElectricVersion = '4.3'

    supportDependencies = [
            appCompat             : "androidx.appcompat:appcompat:${appCompatVersion}",
            coreLib               : "androidx.core:core-ktx:${appCompatVersion}",
            supportAnnotation     : "androidx.annotation:annotation:${appCompatVersion}",
            constraintLayoutLib   : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            kotlinLib             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            mockito               : "org.mockito:mockito-core:${mockitoVersion}",
            junit                 : "junit:junit:${junitVers}",
            coreTestingLib        : "android.arch.core:core-testing:${coreTestingVersion}",
            powerMock             : "org.powermock:powermock-core:${powerMockVersion}",
            powerMockJunit        : "org.powermock:powermock-module-junit4:${powerMockVersion}",
            powerMockMockito      : "org.powermock:powermock-api-mockito2:${powerMockVersion}",
            roboElectricLib       : "org.robolectric:robolectric:${roboElectricVersion}",
            designSupportLib      : "com.google.android.material:material:${supportVersion}",
            recyclerViewLib       : "androidx.recyclerview:recyclerview:${recyclerViewVersion}",
            lifeCycleLib          : "android.arch.lifecycle:extensions:${lifecycleVersion}",
            lifeCycleCompilerLib  : "android.arch.lifecycle:compiler:${lifecycleVersion}",
            roomDatabaseRuntime   : "androidx.room:room-runtime:${roomDatabaseVersion}",
            roomDatabaseCompiler  : "androidx.room:room-compiler:${roomDatabaseVersion}",
            roomDatabaseTestHelper: "androidx.room:room-testing:${roomDatabaseVersion}",
    ]
    thirdPartyLibraries = [
            rxAndroidLib          : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            rxKotlinLib           : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            gsonLib               : "com.google.code.gson:gson:${gSonVersion}",
            okHttpLib             : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogging         : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofitLib           : "com.squareup.retrofit2:retrofit:${gSonConvertorRetrofitVersion}",
            gsonConverter         : "com.squareup.retrofit2:converter-gson:${gSonConvertorRetrofitVersion}",
            rxAdapter             : "com.squareup.retrofit2:adapter-rxjava2:${gSonConvertorRetrofitVersion}",
            daggerLib             : "com.google.dagger:dagger:${daggerVersion}",
            daggerCompilerLib     : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroidLib      : "com.google.dagger:dagger-android:${daggerVersion}",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",
    ]
}
